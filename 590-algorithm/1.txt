
#include <stdio.h>
#include <iostream>
#include <time.h>
#include <cstdlib>

using namespace std;



void bubble_sort(int array[], int array_length){
    // sort array using bubble sort algorithm.
    int cur = 0;
    for(int i = 0; i < array_length; i++){
        for(int j = array_length -1; j >= i + 1; j--){
            if(array[j] < array[j - 1]){
                cur = array[j];
                array[j] = array[j - 1];
                array[j - 1] = cur;
            }
        }
    }
}

void insertion_sort(int array[], int array_length){
    // sort array using insertion sort algorithm.
    int key = 0;
    for(int j = 2; j < array_length; j++){
        key = array[j];
        int i = j - 1;
        while(array[i] > key && i >= 0){
            array[i + 1] = array[i];
            i = i - 1;
        } 
        array[i + 1] = key;
    }
}

void merge(int A[],int lo, int mid, int hi){
    int B[hi - lo + 1];
    int i1 = lo;
    int i2 = mid + 1;
    int i = lo;

    while(i1 < mid && i2 < hi){
        if(A[i1] <= A[i2]){
            B[i++] = A[i1++];
        }
        else{
            B[i++] = A[i2++];
        }
    }

    while(i1 <= mid){
        B[i++] = A[i1++];
    }

    while(i2 <= hi){
        B[i++] = A[i2++];
    }

   for(int j = lo; j <= hi; j++) {
        A[j] = B[j];
    }
}

void merge_sort(int A[], int lo, int hi){
    // sort array using merge sort algorithm.
     if(lo < hi){
        int mid = lo + (hi - lo)/ 2;
   
        merge_sort(A, lo, mid);
        merge_sort(A, mid + 1, hi);
        merge(A, lo, mid, hi);
        //system.out.println(Arrays.toString(A));
     }    
}

int main()
{
    int a[10];
    int b[100];
    int c[1000];

    for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++){
        a[i]=rand()%100;
    }
   
    for(int i = 0; i < sizeof(b)/sizeof(b[0]); i++){
        b[i]=rand()%1000;
    }

    for(int i = 0; i < sizeof(c)/sizeof(c[0]); i++){
         c[i]=rand()%10000;
    }
    for(int i=0; i<sizeof(a)/sizeof(a[0]); i++){
    cout << a[i] << " ";
    }
    cout << endl;
    float start = clock();
    cout<< "start"<<start<<endl;
    merge_sort(a,0,sizeof(a)/sizeof(a[0])-1);
    float end = clock();
    for(int i=0; i<sizeof(a)/sizeof(a[0]); i++){
        cout << a[i] << " ";
    }
    cout << endl;
    cout<< "end:"<<end<<endl;
    float TimeValue;
    TimeValue = end -start;
    cout<<"Total time:"<<TimeValue<<endl;
    return 0;
}